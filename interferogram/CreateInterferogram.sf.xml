<?xml version="1.0"?>
<sf:sciflo xmlns:sf="http://sciflo.jpl.nasa.gov/2006v1/sf"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:py="http://sciflo.jpl.nasa.gov/2006v1/py">
  <sf:flow id="Create_Interferograms">
    <sf:title>Create Interferograms</sf:title>
    <sf:icon>http://sciflo.jpl.nasa.gov/sciflo/web/thumbnails/merged_data.png</sf:icon>
    <sf:description>Run network selector to determine interferograms that can be generated and generate them.</sf:description>
    <sf:inputs>
      <objectid>CSKS1_RAW_B_HI_05_HH_RA_20130620133123_20130620133129</objectid>
      <output_name>CSKS1_RAW_B_HI_05_HH_RA_20130620133123_20130620133129.interferogram.json</output_name>
      <project>calimap</project>
    </sf:inputs>
    <sf:outputs>
      <config_files from="@#network_selector"/>
      <interferograms from="@#create_interferogram"/>
    </sf:outputs>

    <sf:processes>

      <sf:process id="create_job_description">
        <sf:inputs>
          <objectid/>
          <project/>
          <mode>nominal</mode>
          <workflow>vanilla_isce</workflow>
          <unwrapper>snaphu</unwrapper>
          <unwrap>true</unwrap>
          <posting>20</posting>
          <filterStrength>0.7</filterStrength>
          <output_name/>
          <geolist>coherenceFilename unwrappedIntFilename phsigFilename losFilename connectedComponentsFilename</geolist>
          <productList>*.geo filt_topophase.unw filt_topophase.unw.conncomp</productList>
        </sf:inputs>
        <sf:outputs>
            <job_info/>
        </sf:outputs>
        <sf:operator>
          <sf:description></sf:description>
          <sf:op>
            <sf:binding job_queue="jobs_processed">parallel:python:?network_selector.parpython.create_job_desc</sf:binding>
          </sf:op>
        </sf:operator>
      </sf:process>
      
      <sf:process id="get_job_description">
        <sf:inputs>
          <job_info from="@#previous" />
        </sf:inputs>
        <sf:outputs>
          <job_desc_url/>
        </sf:outputs>
        <sf:operator>
          <sf:description></sf:description>
          <sf:op>
            <sf:binding>python:?network_selector.parpython.get_jobdesc_config</sf:binding>
          </sf:op>
        </sf:operator>
      </sf:process>

      <sf:process id="network_selector">
        <sf:inputs>
          <objectid/>
          <output_name/>
          <project/>
          <job_desc_url from="@#previous" />
        </sf:inputs>
        <sf:outputs>
            <job_info/>
        </sf:outputs>
        <sf:operator>
          <sf:description></sf:description>
          <sf:op>
            <sf:binding job_queue="jobs_processed">parallel:python:?network_selector.parpython.create_job</sf:binding>
          </sf:op>
        </sf:operator>
      </sf:process>
      
      <sf:process id="get_netsel_configs">
        <sf:inputs>
          <job_info from="@#previous" />
        </sf:inputs>
        <sf:outputs>
          <netsel_urls/>
          <job_desc_urls/>
        </sf:outputs>
        <sf:operator>
          <sf:description></sf:description>
          <sf:op>
            <sf:binding>python:?network_selector.parpython.get_netsel_configs</sf:binding>
          </sf:op>
        </sf:operator>
      </sf:process>

      <sf:process id="create_interferogram">
        <sf:inputs>
          <netsel_urls from="@#previous"/>
          <job_desc_urls from="@#previous"/>
          <project/>
        </sf:inputs>
        <sf:outputs>
          <interferograms/>
        </sf:outputs>
        <sf:operator>
          <sf:description></sf:description>
          <sf:op>
            <sf:binding job_queue="jobs_processed">map:python:?interferogram.parpython.create_job</sf:binding>
          </sf:op>
        </sf:operator>
      </sf:process>

    </sf:processes>
  </sf:flow>
</sf:sciflo>
